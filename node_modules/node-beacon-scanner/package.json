{
  "_args": [
    [
      {
        "raw": "node-beacon-scanner",
        "scope": null,
        "escapedName": "node-beacon-scanner",
        "name": "node-beacon-scanner",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/agrsharm/Desktop/Udemy/The Complete Node.js Developer Course (2nd Edition)/beacon_integration"
    ]
  ],
  "_from": "node-beacon-scanner@latest",
  "_id": "node-beacon-scanner@0.1.0",
  "_inCache": true,
  "_location": "/node-beacon-scanner",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-beacon-scanner_0.1.0_1531539475733_0.5961598335410732"
  },
  "_npmUser": {
    "name": "futomi",
    "email": "futomi.hatano@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-beacon-scanner",
    "scope": null,
    "escapedName": "node-beacon-scanner",
    "name": "node-beacon-scanner",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/node-beacon-scanner/-/node-beacon-scanner-0.1.0.tgz",
  "_shasum": "f3378f25edb84b2b175699d5af87449901831947",
  "_shrinkwrap": null,
  "_spec": "node-beacon-scanner",
  "_where": "/Users/agrsharm/Desktop/Udemy/The Complete Node.js Developer Course (2nd Edition)/beacon_integration",
  "author": {
    "name": "Futomi Hatano",
    "email": "futomi.hatano@gmail.com",
    "url": "https://github.com/futomi"
  },
  "bugs": {
    "url": "https://github.com/futomi/node-beacon-scanner/issues"
  },
  "dependencies": {
    "noble": ">=1.8.1"
  },
  "description": "The node-beacon-scanner is a Node.js module which allows you to scan BLE beacon packets and parse the packet data. This module supports iBeacon, Eddystone, and Estimote.",
  "devDependencies": {},
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "integrity": "sha512-jhNnRlAqSJ8carfunj81lo1K4eJp4TpIhD09unoLp92/e61tyJSVVGKT4rbPQGPPC0d7/aBaZGXg1qY2R8JdcQ==",
    "shasum": "f3378f25edb84b2b175699d5af87449901831947",
    "tarball": "https://registry.npmjs.org/node-beacon-scanner/-/node-beacon-scanner-0.1.0.tgz",
    "fileCount": 8,
    "unpackedSize": 42583,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbSXATCRA9TVsSAnZWagAAtBQP/13ZF8XYvFmb8+Y9mOyq\niCNlEReKfGbH7j997P1OQb617ZYVXawLFR7qfS0Yry6E1P4QmZuxGxOuBc9w\nq4MKwSkABxgILrA1aidDyKI+qcWqHoxawWYeuj+A+yagN4E+moyF9Th4krwK\ningZ58InBcIcmK0X40+mClHVS0zzb29hEvO/uJmUzU9JwyFfPX3hzKZfb62Z\nc9fXPRuMuk56sp25kuOTrMGd3XoOQzWwDovNkmamcbvz7UBzBC2d9XarZrAr\nb4HqRIP89nkTnrlKkmOJVjI/iuDbdt1+0A3wwoaMTV9Z38ATtYy0oc3/vpp+\ni3UYNZgXPRVZCyiemN7V9iR6Cp8VGR6n7AkRlw/X+AsgGRAvf4i6LoMET3KM\n4eNumyBgTDnyyGbMOGNTfHoPg0aW1oxa4V8u9/brT5WV8iEzGTEgvyJD9uR7\n2ir+M3trRfblnPE99dT5cSJGP0dYLQD3pa7b56EBL7XdyFWMDjDCEHbLPPmG\nqr9yygotHOBw/Wdap8w/NnlGH5u5/AHQYsPNKyV7dBvWxMVxsIV5VTrg9CGH\noe7kTl8gYTdmkPBwYee3BIm70T0BepRNg0JLsZkuSZVR2VuDBo5I3wVIcQyv\nYSI6dajgXMkVp0Z2oHoDZB3l0xEdfkXaql3tjBN0wtZGsRPZoMF53rpJ+fih\nTkWg\r\n=Vtz0\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib"
  ],
  "gitHead": "a229b33a3cfbc73fc546181ad38e2c5b865a9b77",
  "homepage": "https://github.com/futomi",
  "keywords": [
    "Eddystone",
    "iBeacon",
    "Estimote",
    "BLE",
    "Bluetooth Low Energy",
    "Bluetooth smart",
    "Bluetooth",
    "IoT",
    "Internet of Things"
  ],
  "license": "MIT",
  "main": "./lib/scanner.js",
  "maintainers": [
    {
      "name": "futomi",
      "email": "futomi.hatano@gmail.com"
    }
  ],
  "name": "node-beacon-scanner",
  "optionalDependencies": {},
  "readme": "node-beacon-scanner\n===============\n\nThe node-beacon-scanner is a Node.js module which allows you to scan BLE beacon packets and parse the packet data. This module supports iBeacon, Eddystone, and Estimote.\n\nThe supported beacon data formats are as follows:\n\n* iBeacon\n* Eddystone-UID\n* Eddystone-URL\n* Eddystone-TLM (Unencrypted)\n* Eddystone-EID\n* Estimote-Telemetry\n* Estimote-Nearable\n\n## Dependencies\n\n* [Node.js](https://nodejs.org/en/) 6 +\n* [noble](https://github.com/sandeepmistry/noble)\n\nSee the document of the [noble](https://github.com/sandeepmistry/noble) for details on installing the [noble](https://github.com/sandeepmistry/noble).\n\nNote that the noble has to be run as root on most of Linux environments. Though the default user of Raspbian `pi` can run the noble on Raspbian, normal users can not access the BLE using the noble generally. See the document of the [noble](https://github.com/sandeepmistry/noble) for details.\n\n## Installation\n\n```\n$ cd ~\n$ npm install noble\n$ npm install node-beacon-scanner\n```\n\n---------------------------------------\n## Table of Contents\n\n* [Quick Start](#Quick-Start)\n* [`BeaconScanner` object](#BeaconScanner-object)\n  * [scartScan() method](#BeaconScanner-startScan-method)\n  * [stopScan() method](#BeaconScanner-stopScan-method)\n  * [`onadvertisement` event handler](#BeaconScanner-onadvertisement-event-handler)\n* [`BeaconScannerAdvertisement` object](#BeaconScannerAdvertisement-object)\n* [Release Note](#Release-Note)\n* [References](#References)\n* [License](#License)\n\n---------------------------------------\n## <a id=\"Quick-Start\">Quick Start</a>\n\nThis sample code shows how to start scanning and how to get parsed packets.\n\n```JavaScript\nconst BeaconScanner = require('node-beacon-scanner');\nconst scanner = new BeaconScanner();\n\n// Set an Event handler for becons\nscanner.onadvertisement = (ad) => {\n  console.log(JSON.stringify(ad, null, '  '));\n};\n\n// Start scanning\nscanner.startScan().then(() => {\n  console.log('Started to scan.')  ;\n}).catch((error) => {\n  console.error(error);\n});\n```\n\nThe sample code above will output the result as follows:\n\n```\nStarted to scan.\n{\n  \"id\": \"c7dfbfd9f64a\",\n  \"address\": \"c7:df:bf:d9:f6:4a\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"iBeacon\",\n  \"iBeacon\": {\n    \"uuid\": \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\",\n    \"major\": 21983,\n    \"minor\": 57807,\n    \"txPower\": 180\n  }\n}\n...\n```\n\n---------------------------------------\n## <a id=\"BeaconScanner-object\">`BeaconScanner` object</a>\n\nIn order to use the node-beacon-scanner, you have to load the node-beacon-scanner module as follows:\n\n```JavaScript\nconst BeaconScanner = require('node-beacon-scanner');\n```\n\nYou can get an `BeaconScanner` constructor from the code above. Then you have to create an `BeaconScanner` object from the `BeaconScanner` constructor as follows:\n\n```JavaScript\nconst scanner = new BeaconScanner();\n```\n\nThe `BeaconScanner` constructor takes an argument optionally. It must be a hash object containing the properties as follows:\n\nProperty | Type   | Required | Description\n:--------|:-------|:---------|:-----------\n`noble`  | Noble  | option   | a Noble object of the [`noble`](https://www.npmjs.com/package/noble) module\n\nThe node-beacon-scanner module uses the [`noble`](https://www.npmjs.com/package/noble) module in order to scan the beacons coming from the BLE beacon device(s). If you want to interact other BLE devices using the noble module, you can create an `Noble` object by yourself, then pass it to this module. If you don't specify a `Noble` object to the `noble` property, this module automatically create a `Noble` object internally.\n\nThe sample code below shows how to pass a `Nobel` object to the `Linking` constructor.\n\n```JavaScript\n// Create a Noble object\nconst noble = require('noble');\n\n// Create a Linking object\nconst BeaconScanner = require('node-beacon-scanner');\nconst scanner = new BeaconScanner({'noble': noble});\n```\n\nIn the code snippet above, the variable `scanner` is a `BeaconScanner` object. The `BeaconScanner` object has methods as described in sections below.\n\n### <a id=\"BeaconScanner-startScan-method\">scartScan() method</a>\n\nThe `startScan()` method starts to scan advertising packets from BLE beacon devices. This method returns a `Promise` object.\n\nWhenever a packet is received, the callback function set to the [`onadvertisement`](#BeaconScanner-onadvertisement-event-handler) property of the `BeaconScanner` object will be called. When a packet is received, an [`BeaconScannerAdvertisement`](#BeaconScannerAdvertisement-object) object will be passed to the callback function.\n\n```JavaScript\n// Set an Event handler for becons\nscanner.onadvertisement = (ad) => {\n  console.log(JSON.stringify(ad, null, '  '));\n};\n\n// Start scanning\nscanner.startScan().then(() => {\n  console.log('Started to scan.')  ;\n}).catch((error) => {\n  console.error(error);\n});\n```\n\n### <a id=\"BeaconScanner-stopScan-method\">stopScan() method</a>\n\nThe `stopScan()` method stops to scan advertising packets from BLE beacon devices. See the section \"[`startScan()` method](#BeaconScanner-startScan-method)\" for details.\n\n### <a id=\"BeaconScanner-onadvertisement-event-handler\">`onadvertisement` event handler</a>\n\nIf a callback function is set to the `onadvertisement` property, the callback function will be called whenever an advertising packet is received from a BLE beacon device during the scan is active (from the moment when the `startScan()` method is called, to the moment when the `stopScan()` method is called).\n\nSee the section \"[`startScan()` method](#BeaconScanner-startScan-method)\" for details.\n\n---------------------------------------\n## <a id=\"BeaconScannerAdvertisement-object\">`BeaconScannerAdvertisement` object</a>\n\nThe `BeaconScannerAdvertisement` object represents an advertising data coming from the BLE beacon device. This object is just a hash object containing properties as follows. Note that the structure varies depending on the format of the beacon. You can know the format of the beacon from the value of the `beaconType` property.\n\n### iBeacon\n\n```JavaScript\n{\n  \"id\": \"c7dfbfd9f64a\",\n  \"address\": \"c7:df:bf:d9:f6:4a\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"iBeacon\",\n  \"iBeacon\": {\n    \"uuid\": \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\",\n    \"major\": 21983,\n    \"minor\": 57807,\n    \"txPower\": 180\n  }\n}\n```\n\nThe value of the `iBeacon` property contains the properties as follows:\n\nProperty  |Type    |Description\n:---------|:-------|:----------\n`uuid`    | String | Proximity UUID\n`major`   | Number | Major\n`minor`   | Number | Minor\n`txPower` | Number | Measured Power (dBm)\n\n### Eddystone-UID\n\n```JavaScript\n{\n  \"id\": \"c6debed8f549\",\n  \"address\": \"c6:de:be:d8:f5:49\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"eddystoneUid\",\n  \"eddystoneUid\": {\n    \"txPower\": -35,\n    \"namespece\": \"EDD1EBEAC04E5DEFA017\",\n    \"instance\": \"2D3EA3203B6B\"\n  }\n}\n```\n\nThe value of the `eddystoneUid` property contains the properties as follows:\n\nProperty     |Type    |Description\n:------------|:-------|:----------\n`namespece`  | String | Namespace ID\n`instance`   | String | Instance ID\n`txPower`    | Number | Calibrated Tx power (dBm)\n\n\n### Eddystone-URL\n\n```JavaScript\n{\n  \"id\": \"c6debed8f549\",\n  \"address\": \"c6:de:be:d8:f5:49\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"eddystoneUrl\",\n  \"eddystoneUrl\": {\n    \"txPower\": -35,\n    \"url\": \"http://go.esti.be/\"\n  }\n}\n```\n\nThe value of the `eddystoneUrl` property contains the properties as follows:\n\nProperty  |Type    |Description\n:---------|:-------|:----------\n`url`     | String | Decoded URL\n`txPower` | Number | Calibrated Tx power (dBm)\n\n### Eddystone-TLM (Unencrypted)\n\n```JavaScript\n{\n  \"id\": \"c6debed8f549\",\n  \"address\": \"c6:de:be:d8:f5:49\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"eddystoneTlm\",\n  \"eddystoneTlm\": {\n    \"batteryVoltage\": 6059,\n    \"temperature\": 28.59765625,\n    \"advCnt\": 83,\n    \"secCnt\": 361299\n  }\n}\n```\n\nThe value of the `eddystoneTlm` property contains the properties as follows:\n\nProperty         |Type    |Description\n:----------------|:-------|:----------\n`batteryVoltage` | Number | Battery voltage (mV)\n`temperature`    | Number | Beacon temperature (°C)\n`advCnt`         | Number | Advertising PDU count\n`secCnt`         | Number | Time since power-on or reboot\n\n### Eddystone-EID\n\n```JavaScript\n{\n  \"id\": \"d9d9fe86fb61\",\n  \"address\": \"d9:d9:fe:86:fb:61\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"eddystoneEid\",\n  \"eddystoneEid\": {\n    \"txPower\": -35,\n    \"eid\": \"79c58b83f198ddbe\"\n  }\n}\n```\n\nThe value of the `eddystoneEid` property contains the properties as follows:\n\nProperty  |Type    |Description\n:---------|:-------|:----------\n`eid`     | String | Ephemeral Identifier\n`txPower` | Number | Calibrated Tx power (dBm)\n\n### Estimote-Telemetry\n\nThere are two types in the Estimote Telemetry beacon data: `Type A` and `Type B`. The types can be obtained checking the value of the `subFrameType` property. If the type is `A`, the value is `0`. If the type is `B`, the value is `1`.\n\n*Type A*\n\n```JavaScript\n{\n  \"id\": \"c9e1c1dbf84c\",\n  \"address\": \"c9:e1:c1:db:f8:4c\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"estimoteTelemetry\",\n  \"estimoteTelemetry\": {\n    \"frameType\": 2,\n    \"subFrameType\": 0,\n    \"protocolVersion\": 2,\n    \"shortIdentifier\": \"2d3ea3203b6b2446\",\n    \"acceleration\": {\n      \"x\": -0.015748031496062992,\n      \"y\": -0.07874015748031496,\n      \"z\": 0.9921259842519685\n    },\n    \"moving\": false,\n    \"gpio\": {\n      \"pin0\": \"low\",\n      \"pin1\": \"low\",\n      \"pin2\": \"high\",\n      \"pin3\": \"high\"\n    },\n    \"errors\": {\n      \"firmware\": false,\n      \"clock\": false\n    },\n    \"pressure\": 100304.9765625\n  }\n}\n```\n\n*Type B*\n\n```JavaScript\n{\n  \"id\": \"c9e1c1dbf84c\",\n  \"address\": \"c9:e1:c1:db:f8:4c\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"estimoteTelemetry\",\n  \"estimoteTelemetry\": {\n    \"frameType\": 2,\n    \"subFrameType\": 1,\n    \"protocolVersion\": 2,\n    \"shortIdentifier\": \"2d3ea3203b6b2446\",\n    \"magneticField\": {\n      \"x\": 0,\n      \"y\": 0,\n      \"z\": 0\n    },\n    \"light\": 80.64,\n    \"uptime\": {\n      \"unitCode\": 1,\n      \"unitDesc\": \"minutes\",\n      \"value\": 596\n    },\n    \"temperature\": 28.75,\n    \"batteryVoltage\": 6059,\n    \"batteryLevel\": 95\n  }\n}\n```\n\n\n\n### Estimote-Nearable\n\n```JavaScript\n{\n  \"id\": \"f8d3c05e8001\",\n  \"address\": \"f8:d3:c0:5e:80:01\",\n  \"localName\": null,\n  \"txPowerLevel\": null,\n  \"rssi\": -59,\n  \"beaconType\": \"estimoteNearable\",\n  \"estimoteNearable\": {\n    \"nearableId\": \"bd20de5cd074de8d\",\n    \"temperature\": 25.75,\n    \"moving\": false,\n    \"acceleration\": {\n      \"x\": -15.625,\n      \"y\": -78.125,\n      \"z\": -1031.25\n    }\n  }\n}\n```\n\nThe value of the `estimoteNearable` property contains the properties as follows:\n\nProperty       |     |Type     |Description\n:--------------|:----|:--------|:----------\n`nearableId`   |     | String  | Nearable identifier\n`temperature`  |     | Number  | Temperature (°C)\n`moving`       |     | Boolean | Moving state (true: moving)\n`acceleration` |     | Object  | Acceleration\n--             | `x` | Number  | Acceleration on the X axis (milli G)\n--             | `y` | Number  | Acceleration on the Y axis (milli G)\n--             | `z` | Number  | Acceleration on the Z axis (milli G)\n\n---------------------------------------\n## <a id=\"Release-Note\">Release Note</a>\n\n* v0.1.0 (2018-07-14)\n  * Supported the Eddystone-UID of [Kontakt](https://kontakt.io/). The [spec of the Eddystone-UID](https://github.com/google/eddystone/tree/master/eddystone-uid) defines that the packet size is 20 bytes (the last 2 bytes are RFU). But the size of the packet form Kontakt device is 18 bytes.\n* v0.0.3 (2018-06-24)\n  * Fixed a bug that an exception was thrown when an unknown packet came.\n* v0.0.2 (2017-09-15)\n  * Fixed a bug that an exception was thrown when an unknown packet came.\n* v0.0.1 (2017-09-06)\n  * First public release\n\n---------------------------------------\n## <a id=\"References\">References</a>\n\n* [Eddystone Protocol Specification](https://github.com/google/eddystone/blob/master/protocol-specification.md)\n  * [Eddystone-UID](https://github.com/google/eddystone/tree/master/eddystone-uid)\n  * [Eddystone-URL](https://github.com/google/eddystone/tree/master/eddystone-url)\n  * [Eddystone-TLM](https://github.com/google/eddystone/tree/master/eddystone-tlm)\n  * [Eddystone-EID](https://github.com/google/eddystone/tree/master/eddystone-eid)\n* [iBeacon - Apple Developer](https://developer.apple.com/ibeacon/)\n* [Estimote packet specs](https://github.com/estimote/estimote-specs)\n\n---------------------------------------\n## <a id=\"License\">License</a>\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2018 Futomi Hatano\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/futomi/node-beacon-scanner.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.0"
}
